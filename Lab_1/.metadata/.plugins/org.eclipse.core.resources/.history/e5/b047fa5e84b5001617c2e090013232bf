import java.io.Serializable;
public class Clock implements Serializable {
	private static final long serialVersionUID = 1L;
	private int[] clock;

	public Clock(int size){
		clock = new int[size];
	}
		
	public Clock(int[] clock){
		this.clock = clock;
	}
		
	public synchronized void increase(int i){
		clock[i]++;
	}
		
	public synchronized void decrease(int i){
		clock[i]++;
	}
	
	 public synchronized void update(int[] senderVector){
	        for(int i=0;i<senderVector.length;i++){
	            if (senderVector[i]>clock[i])clock[i]=senderVector[i];
	        }
	    }
	 
	public boolean greaterEqual(Clock senderClock){
		for(int i = 0; i < clock.length;i++){
			if(clock[i]<senderClock.clock[i])
				return false;			
		}
		return true;
	}
		
	public boolean sendCondition(Clock receiverClock){
		int count = 0;
		for(int i = 0; i < clock.length;i++){
			if(clock[i] > receiverClock.clock[i])
				count++;			
		}
		return (count <= 1);
	}
				
		

}
